name: publish

on:
  push:
    tags:
      - '*'
      
permissions:
  actions: read
  checks: write
  contents: read
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Get faas-cli
        uses: alexellis/arkade-get@master
        with:
          faas-cli: latest
      - name: Get templates
        run: faas-cli template store pull node20
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Get TAG
        id: get_tag
        run: echo "TAG=latest-dev" >> $GITHUB_OUTPUT
      - name: Get Repo Owner
        id: get_repo_owner
        run: |
          repo_owner=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')
          echo "repo_owner=${repo_owner}" >> $GITHUB_OUTPUT
      - name: Login to ghcr.io
        id: ghcr_login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ steps.get_repo_owner.outputs.repo_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish functions
        run: >
          OWNER="${{ steps.get_repo_owner.outputs.repo_owner }}" 
          TAG="latest"
          SERVER="ghcr.io"
          faas-cli publish
          --extra-tag ${{ github.sha }}
          --platforms linux/amd64,linux/arm/v7
      - name: Login
        run: >
          echo ${{secrets.OPENFAAS_PASSWORD}} | 
          faas-cli login --gateway ${{secrets.OPENFAAS_URL}}
          --password-stdin
      - name: Check server version command works OK
        run: |
          faas-cli version --gateway ${{secrets.OPENFAAS_URL}}
      - name: Create discord secret
        run: >
          faas-cli secret create discord-sponsors-url 
          --update
          --gateway ${{secrets.OPENFAAS_URL}}
          --from-literal "${{ secrets.DISCORD_SPONSORS_URL }}" || echo "Secret already exists"
      - name: Create GitHub webhook secret
        run: >
          faas-cli secret create sponsors-webhook-secret 
          --update
          --gateway ${{secrets.OPENFAAS_URL}}
          --from-literal "${{ secrets.SPONSORS_WEBHOOK_SECRET }}" || echo "Secret already exists"
      - name: Deploy
        run: >
          OWNER="${{ steps.get_repo_owner.outputs.repo_owner }}"
          TAG="${{ github.sha }}"
          SERVER="ghcr.io"
          faas-cli deploy --gateway ${{secrets.OPENFAAS_URL}}
